{
  // Use the workspace TypeScript (prevents the giant phantom “problems” list)
  "typescript.tsdk": "node_modules\\typescript\\lib",
  "typescript.enablePromptUseWorkspaceTsdk": true,

  // Quiet diagnostics from nested tsconfigs in node_modules (e.g. @vercel/analytics)
  "typescript.tsserver.experimental.enableProjectDiagnostics": false,
  // Also stop the editor from trying to auto-fetch types you don't need
  "typescript.disableAutomaticTypeAcquisition": true,
  // (Optional) give TS a bit more memory if your workspace is large
  // "typescript.tsserver.maxTsServerMemory": 3072,

  // Helpful TS/JS suggestions
  "typescript.preferences.preferTypeOnlyAutoImports": true,
  "javascript.suggest.autoImports": true,

  // Run ESLint fixes explicitly on save (only when you trigger Save)
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": "explicit"
  },

  // Tailwind/PostCSS: silence at-rule warnings in the editor
  "css.lint.unknownAtRules": "ignore",
  "scss.lint.unknownAtRules": "ignore",
  "less.lint.unknownAtRules": "ignore",
  "css.validate": false,

  // Better class name suggestions in strings
  "editor.quickSuggestions": { "strings": true },

  // Tailwind: recognize classes in TS/TSX/JSX and classNames() helper
  "tailwindCSS.includeLanguages": {
    "typescript": "javascript",
    "typescriptreact": "javascript",
    "javascriptreact": "javascript"
  },
  "tailwindCSS.experimental.classRegex": [
    ["classNames\\(([^)]*)\\)", "(?:'|\"|`)([^'\"`]*)(?:'|\"|`)"]
  ],

  // Keep search and file watchers calm for build artifacts
  "search.exclude": {
    "**/node_modules": true,
    "**/.next": true,
    "**/dist": true,
    "**/build": true,
    "**/coverage": true
  },
  "files.watcherExclude": {
    "**/node_modules/**": true,
    "**/.next/**": true,
    "**/dist/**": true,
    "**/build/**": true,
    "**/coverage/**": true
  }
}
